{"version":3,"sources":["js/Components/Account/Account.js","js/Reducers/actionTypes.js","js/DB/indexedDB.js","js/Reducers/actions.js","js/Reducers/TaskReducer.js","js/Contexts/addTaskContext.js","js/CustomHooks/useUpdateEffect.js","media/cancel.svg","media/done_all-black-24dp.svg","js/Components/Dasboard/D-portals/completed-tasks.js","media/assignment_late-black-24dp.svg","js/Components/Dasboard/D-portals/faild-tasks.js","js/Components/Dasboard/FormCard.js","media/add_task-black-24dp.svg","media/delete-black-24dp.svg","media/mode_edit-black-24dp.svg","js/Components/Dasboard/D-portals/Modal.js","js/Components/Dasboard/timeTracker.js","js/Components/Dasboard/ListCard.js","media/First_Add_tasks.svg","js/Components/Dasboard/MsgHolder.js","js/Components/Dasboard/Dashboard.js","media/dashboard_black_24dp.svg","media/menu_open_black_24dp.svg","media/notifications_black_24dp.svg","media/person_black_24dp.svg","media/settings_black_24dp.svg","media/todo-app-logo.svg","media/trending_up_black_24dp.svg","js/Components/Nav/Nav.js","js/Components/Notification/NoteBar.js","js/Components/Notification/Notification.js","js/Components/Notification/PopUp.js","js/Components/Setting/Setting.js","js/Components/statics/ChartGraph.js","js/Components/statics/Statics.js","js/App.js","index.js"],"names":["Account","id","className","db","TASK_ADDED","TASK_EDITED","TASK_REMOVED","TASK_COMPLETED","C_T_REMOVED","TASK_FAILD","F_T_REMOVED","taskAdded","title","label","deadline","startDate","uuid","type","actionType","payload","taskRemoved","taskCompleted","tasks","taskFaild","taskReducer","state","action","editedTasks","map","task","i","filter","filteredTask","find","filtered_F_Task","updateDB","window","indexedDB","console","log","DBopenReq","open","onerror","e","target","result","warn","onupgradeneeded","event","alert","error","DBtasks","createObjectStore","keyPath","DBcompletedTasks","DBfaildTasks","createIndex","unique","onsuccess","forEach","storeName","Item","tx","transaction","oncomplete","objectStore","clear","put","addToDB","TaskContext","createContext","AddTaskContextProvider","props","useReducer","TaskReducer","dispatch","completedTasks","dispatchCompletion","faildTasks","dispatchFailure","useEffect","item","Promise","resolve","reject","DB","req","getAll","then","catch","callback","dependencies","firstRenderRef","useRef","current","useUpdateEffect","Provider","value","children","OVERLAY_SHADOW","position","top","left","right","bottom","backgroundColor","zIndex","CompletedTasksLists","modalOpen","onClose","removeTask","listElement","handleRemoveClick","CompletedTaskRemoved","createPortal","style","onClick","length","ref","src","remove_btn","alt","document","getElementById","CompletedTasks","useState","isOpen","setIsOpen","useContext","count","complete_btn","FaildTasksLists","FaildTaskRemoved","FaildTasks","error_btn","FormCard","setTitle","setLabel","sDate","setSdate","dLine","setDline","clearState","onSubmit","preventDefault","HandleSubmit","placeholder","onChange","required","htmlFor","MODAL_STYLE","transform","padding","Modal","editedTitle","setEditedTitle","editedLabel","setEditedLabel","editedSdate","setEditedSdate","editedDline","setEditedDline","HandleEditSubmit","taskEdited","ReactDOM","trackTimeInterval","deadLine","one_day","Today","Date","setHours","TimeIntervalInmilli","Math","floor","ListCard","timeGap","setTimeGap","isModalOpen","setIsModalOpen","showTimeGap","useCallback","day","TimeIntervalInDay","statusCheck","setInterval","TimeIntervalInDayloop","clearInterval","edit_btn","delete_btn","MsgHolder","handleClick","add_task_illustration","width","height","Dashboard","showTemplete","setShowTemplete","Nav","changeTab","navbar","href","logoIcon","dashboardIcon","analyticsIcon","notificationIcon","cogsIcon","userIcon","currentTarget","classList","toggle","onBlurCapture","remove","background","border","show_more_btn","NoteBar","Notification","margin","PopUp","isPoped","align","Setting","isTheme","localStorage","getItem","JSON","parse","setItem","switchState","setSwitchState","switcher","stringify","add","contains","ChartGraph","Statics","App","currentTab","navStatus","setNavStatus","setIsPoped","navName","getAttribute","slice","data","render"],"mappings":"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","file":"static/js/main.41a7c353.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Account = () => {\r\n  return (\r\n    <section id=\"Account\" className=\"Account\">\r\n      <nav>\r\n        <span>Account</span>\r\n      </nav>\r\n      <div className=\"warning\">\r\n        <h4>This Feature is not available yet!</h4>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Account;\r\n","export const TASK_ADDED = \"taskAdded\";\r\nexport const TASK_EDITED = \"taskEdited\";\r\nexport const TASK_REMOVED = \"taskRemoved\";\r\nexport const TASK_COMPLETED = \"taskCompleted\";\r\nexport const C_T_REMOVED = \"CompletedTaskRemoved\";\r\nexport const TASK_FAILD = \"taskFaild\";\r\nexport const F_T_REMOVED = \"FaildTaskRemoved\";","//  GLOBALS\r\nconst PREFIX = 'HAPPY-'\r\nlet db, DB_version = 1;\r\n\r\n// window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n  \r\n// window.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction;\r\n\r\n// window.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\r\n\r\n\r\n\r\nexport function updateDB(tasks) {\r\n    if(!window.indexedDB) { return console.log('indexedDB not supported')}\r\n    const DBopenReq = window.indexedDB.open(`HAPPY-TODO-App`, DB_version)\r\n    DBopenReq.onerror = (e) => {\r\n            //  on error\r\n            db = e.target.result;\r\n            \r\n            console.warn(db)\r\n        }\r\n    DBopenReq.onupgradeneeded = (e) => {\r\n        // on upgradeneeded\r\n        db = e.target.result;\r\n        db.onerror = function(event) {\r\n        alert(`Error loading database: ${event.target.error}`);\r\n    }\r\n        \r\n    // create objecetStore \r\n    \r\n    const DBtasks = db.createObjectStore('Tasks', {keyPath: 'id'})\r\n    const DBcompletedTasks = db.createObjectStore('Completed_tasks', {keyPath: 'id'})\r\n    const DBfaildTasks = db.createObjectStore('Faild_tasks', {keyPath: 'id'})\r\n    \r\n    DBtasks.createIndex('id', 'id', { unique : true})\r\n    DBtasks.createIndex('title', 'title', { unique : false})\r\n    DBcompletedTasks.createIndex('id', 'id', { unique : true})\r\n    DBcompletedTasks.createIndex('title', 'title', { unique : false})\r\n    DBfaildTasks.createIndex('id', 'id', { unique : false})\r\n    DBfaildTasks.createIndex('title', 'title', { unique : false})\r\n    console.log('obJect Store created')\r\n    } \r\n        DBopenReq.onsuccess = e => {\r\n        db = DBopenReq.result;\r\n        console.log('success', db);\r\n\r\n        ['Tasks', 'Completed_tasks', 'Faild_tasks'].forEach((e,i) => {\r\n            addToDB(e, tasks[i] )\r\n        })\r\n    //   addToDB('Tasks', tasks)\r\n    //   addToDB('Completed_tasks', completedTasks)\r\n    //   addToDB('Faild_tasks', faildTasks)\r\n    }\r\n    \r\n    function addToDB(storeName , Item ) {\r\n        let tx = db.transaction(storeName, 'readwrite')\r\n    \r\n        tx.oncomplete = e => {\r\n        console.log('tx completed', tx)\r\n        }\r\n        tx.onerror = e => {\r\n        console.log('tx on error', tx)\r\n        }\r\n    \r\n        let objectStore = tx.objectStore(storeName), oSRequest;\r\n        //  clear the store\r\n        let oSclearReq = objectStore.clear();\r\n            oSclearReq.onsuccess = () => {\r\n            console.log('store cleared')\r\n            }\r\n        Item.forEach(task => {\r\n            oSRequest = objectStore.put(task);\r\n        oSRequest.onsuccess = e => {\r\n        console.log(task.id, 'added successfuly')\r\n        }\r\n        });\r\n        \r\n    }\r\n}\r\n\r\nexport function read_DB(label) {\r\n    return new Promise((resolve, reject) => {\r\n      const DB = indexedDB.open(`HAPPY-TODO-App`, DB_version)\r\n      DB.onupgradeneeded = (e) => {\r\n        db = e.target.result\r\n    \r\n        const DBtasks = db.createObjectStore('Tasks', {keyPath: 'id'})\r\n        const DBcompletedTasks = db.createObjectStore('Completed_tasks', {keyPath: 'id'})\r\n        const DBfaildTasks = db.createObjectStore('Faild_tasks', {keyPath: 'id'})\r\n      \r\n        DBtasks.createIndex('id', 'id', { unique : true})\r\n        DBtasks.createIndex('title', 'title', { unique : false})\r\n        DBcompletedTasks.createIndex('id', 'id', { unique : true})\r\n        DBcompletedTasks.createIndex('title', 'title', { unique : false})\r\n        DBfaildTasks.createIndex('id', 'id', { unique : false})\r\n        DBfaildTasks.createIndex('title', 'title', { unique : false})\r\n      }\r\n      DB.onsuccess = () => {\r\n        db = DB.result\r\n        console.log('succes reading' , label)\r\n    \r\n        const tx = db.transaction(label)\r\n        const objectStore = tx.objectStore(label)\r\n        const req = objectStore.getAll()\r\n        req.onsuccess = (e) => {\r\n          // console.log(req.result)\r\n          resolve(req.result) \r\n        } \r\n      }\r\n      DB.onerror = (e) => {\r\n        db = e.target.result;\r\n        reject(db)\r\n      }\r\n    })\r\n  }","import * as actionType from './actionTypes';\r\nimport uuid from 'uuid/dist/v4';\r\n\r\n\r\nexport const taskAdded = (title, label,deadline, startDate,id = uuid()) => ({\r\n  type: actionType.TASK_ADDED,\r\n  payload: {title, label,deadline, startDate, id}\r\n})\r\n\r\nexport const taskEdited = (id,title, label,deadline, startDate) => ({\r\n  type: actionType.TASK_EDITED,\r\n  payload: {title, label,deadline, startDate, id}\r\n})\r\n\r\nexport const taskRemoved = id => ({\r\n  type: actionType.TASK_REMOVED,\r\n  payload: {\r\n    id\r\n  }\r\n})\r\nexport const taskCompleted = (id, tasks) => ({\r\n  type: actionType.TASK_COMPLETED,\r\n  payload: {\r\n    id, tasks\r\n  }\r\n})\r\nexport const CompletedTaskRemoved = id => ({\r\n  type: actionType.C_T_REMOVED,\r\n  payload: {\r\n    id\r\n  }\r\n})\r\nexport const taskFaild = (id, tasks) => ({\r\n  type: actionType.TASK_FAILD,\r\n  payload: {\r\n    id, tasks\r\n  }\r\n})\r\nexport const FaildTaskRemoved = id => ({\r\n  type: actionType.F_T_REMOVED,\r\n  payload: {\r\n    id\r\n  }\r\n})\r\n\r\n\r\n//  TASK_ADDED = \"taskAdded\";\r\n//  TASK_EDITED = \"taskEdited\";\r\n//  TASK_REMOVED = \"taskRemoved\";\r\n//  TASK_COMPLETED = \"taskCompleted\";\r\n//  C_T_REMOVED = \"CompletedTaskRemoved\";\r\n//  TASK_FAILD = \"taskFaild\";\r\n//  F_T_REMOVED = \"FaildTaskRemoved\";","// attention bug // reproduce the bug\r\n// run from dev env then make change(which will rerender the DOM)\r\n// then save\r\n\r\n// import uuid from 'uuid/dist/v4';\r\nimport * as actionType from './actionTypes';\r\n\r\n// DRY detected, Optimization needed\r\n\r\nconst taskReducer = (state, action) => {\r\n  switch (action.type) {\r\n      // call from dispatch\r\n    case actionType.TASK_ADDED: // (only valid on dispatch)\r\n      return [...state, { \r\n         title: action.payload.title,\r\n         label: action.payload.label,\r\n         deadline: action.payload.deadline,\r\n         startDate: action.payload.startDate, \r\n         id: action.payload.id}]\r\n\r\n    case actionType.TASK_EDITED: //  (only valid on dispatch)\r\n      const editedTasks = state.map((task, i) => {\r\n        if(task.id === action.payload.id) {\r\n          return state[i] = { \r\n            title: action.payload.title,\r\n            label: action.payload.label,\r\n            deadline: action.payload.deadline,\r\n            startDate: action.payload.startDate,\r\n            id: action.payload.id}\r\n      }\r\n      return task\r\n    })\r\n    state = editedTasks\r\n    return state\r\n    case actionType.TASK_REMOVED: //  (only valid on dispatch)\r\n      return state.filter(task => task.id !== action.payload.id)\r\n\r\n\r\n      // call from dispatchCompletion\r\n    case actionType.TASK_COMPLETED:{ //  (only valid on dispatchCompletion)\r\n      const filteredTask = (action.payload.tasks).find(task => task.id === action.payload.id)\r\n      return [...state, filteredTask]\r\n      }\r\n\r\n    case actionType.C_T_REMOVED: // (only valid on dispatchCompletion)\r\n      return state.filter(task => task.id !== action.payload.id)\r\n\r\n\r\n      // call from dispatchFailure\r\n    case actionType.TASK_FAILD: { // (only valid on dispatchFailure)\r\n      const filtered_F_Task =(action.payload.tasks).find(task => task.id === action.payload.id)\r\n      return [...state, filtered_F_Task]\r\n    }\r\n    case actionType.F_T_REMOVED: // (only valid on dispatchFailure)\r\n      return state.filter(task => task.id !== action.payload.id)\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default taskReducer","import React, { createContext, useEffect, useReducer } from 'react';\r\nimport  useUpdateEffect  from '../CustomHooks/useUpdateEffect'\r\nimport {  taskAdded, taskCompleted, taskFaild } from '../Reducers/actions';\r\nimport TaskReducer from '../Reducers/TaskReducer';\r\nimport { updateDB, read_DB } from '../DB/indexedDB';\r\n\r\nexport const TaskContext = createContext();\r\n\r\nconst AddTaskContextProvider = (props) => {\r\n  const [tasks, dispatch] = useReducer(TaskReducer, []);\r\n  const [completedTasks, dispatchCompletion] = useReducer(TaskReducer, []);\r\n  const [faildTasks, dispatchFailure] = useReducer(TaskReducer, []);\r\n\r\n\r\n  useEffect(()=> {\r\n    // Works but unstable // needs attention\r\n    ['Tasks', 'Completed_tasks', 'Faild_tasks'].forEach((item, i) => {\r\n      read_DB(item)\r\n      .then(result =>{\r\n         switch (i) {\r\n           case 0:\r\n             result.forEach(task => {\r\n                dispatch(taskAdded( task.title, task.label,\r\n                                    task.deadline, task.startDate,\r\n                                    task.id))\r\n             })\r\n          \r\n             break;\r\n           case 1:\r\n             result.forEach(task => {\r\n               dispatchCompletion(taskCompleted( task.id,result))\r\n             })\r\n             break;\r\n           case 2:\r\n             result.forEach(task => {\r\n               dispatchFailure(taskFaild(task.id,result))\r\n             })\r\n             break;\r\n           default:\r\n             break;\r\n         }\r\n        })\r\n      .catch(error => console.error(error))\r\n    })\r\n  },[]) \r\n\r\n// no intial render\r\n  useUpdateEffect(() => {\r\n    updateDB([tasks, completedTasks, faildTasks])\r\n  }, [tasks, completedTasks, faildTasks])\r\n \r\n\r\n   \r\n  return (\r\n    <TaskContext.Provider value={{tasks,completedTasks,faildTasks,dispatch, dispatchCompletion, dispatchFailure}}>\r\n      {props.children}\r\n    </TaskContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AddTaskContextProvider;","import { useEffect, useRef } from \"react\"\r\n\r\nexport default function useUpdateEffect(callback, dependencies) {\r\n  const firstRenderRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    if (firstRenderRef.current) {\r\n        // I will be only on first render\r\n      firstRenderRef.current = false\r\n      return\r\n    }\r\n    return callback()\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, dependencies)\r\n}","export default __webpack_public_path__ + \"static/media/cancel.ced98c52.svg\";","export default __webpack_public_path__ + \"static/media/done_all-black-24dp.dc6fc541.svg\";","import React, { useContext, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport remove_btn from '../../../../media/cancel.svg';\r\nimport complete_btn from '../../../../media/done_all-black-24dp.svg';\r\nimport { TaskContext } from '../../../Contexts/addTaskContext';\r\nimport { CompletedTaskRemoved } from '../../../Reducers/actions';\r\n\r\n const OVERLAY_SHADOW = {\r\n   position: 'fixed',\r\n   top: 0, left: 0,right:0,bottom:0,\r\n   backgroundColor: 'rgba(0,0,0,0.6)',\r\n   zIndex: 1000\r\n }\r\n\r\nfunction CompletedTasksLists({tasks, modalOpen, onClose, removeTask})  {\r\n    \r\n    const listElement = useRef(null);   \r\n       \r\n    if(!modalOpen) return null;\r\n\r\n    const handleRemoveClick = (id) => {\r\n      if(listElement)  {\r\n       removeTask(CompletedTaskRemoved(id));\r\n      }\r\n    }\r\n   \r\n   return createPortal(\r\n     <>\r\n     <div style={OVERLAY_SHADOW} onClick={onClose}></div>\r\n     <div className=\"completed-tasks-container\">\r\n       <h3 className=\"completed-task-title\">Completed Tasks</h3>\r\n      <ul className=\"completed-tasks-ul\">\r\n        {tasks.length > 0 && tasks.map(task=> (\r\n          <li key={task.id}  id={task.id}      className=\"completed-task-list\"\r\n          ref={listElement}>\r\n            <div className=\"task-card\">\r\n              <h4 className=\"task-title\">{task.title}</h4>\r\n              <p className=\"task-label\">{task.label}</p>\r\n              <span className=\"task-date\">{task.startDate} - {task.deadline}</span>\r\n            </div>\r\n            <div className=\"remove-btn\">\r\n              <img src={remove_btn} alt=\"remove button\" \r\n              onClick={() => handleRemoveClick(task.id)}/>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {`${tasks}` === `${[]}` && \r\n      <span className=\"emptyText\"> Nothing here. <span>But you can make one!</span></span>}\r\n     </div>\r\n     </>,\r\n    document.getElementById('portal')\r\n     \r\n   )\r\n }\r\n \r\n const CompletedTasks = () => {\r\n   const [isOpen , setIsOpen] = useState(false);\r\n   const { completedTasks, dispatchCompletion } = useContext(TaskContext)\r\n\r\n   const count = completedTasks.length;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"completed-tasks\"\r\n           onClick={(e) => setIsOpen(!isOpen)}>\r\n            <img src={complete_btn} alt=\"complete tasks\"/>\r\n            <span className='list-counter'>{count}</span>\r\n      </div>\r\n      <CompletedTasksLists tasks={completedTasks}\r\n                           removeTask={dispatchCompletion}\r\n                           modalOpen={isOpen}\r\n                           onClose={(e) => setIsOpen(!isOpen)}/>\r\n     \r\n    </>\r\n  )\r\n}\r\n \r\n\r\nexport default CompletedTasks;","export default __webpack_public_path__ + \"static/media/assignment_late-black-24dp.9589897b.svg\";","import React, { useContext, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport error_btn from '../../../../media/assignment_late-black-24dp.svg';\r\nimport remove_btn from '../../../../media/cancel.svg';\r\nimport { TaskContext } from '../../../Contexts/addTaskContext';\r\nimport { FaildTaskRemoved } from '../../../Reducers/actions';\r\n\r\nconst OVERLAY_SHADOW = {\r\n  position: 'fixed',\r\n  top: 0, left: 0,right:0,bottom:0,\r\n  backgroundColor: 'rgba(0,0,0,0.6)',\r\n  zIndex: 1000\r\n}\r\n\r\nconst FaildTasksLists = ({tasks, modalOpen, removeTask, onClose}) => {\r\n\r\n  const listElement = useRef(null);   \r\n       \r\n  if(!modalOpen) return null;\r\n\r\n  const handleRemoveClick = (id) => {\r\n    if(listElement)  {\r\n     removeTask(FaildTaskRemoved(id));\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <>\r\n     <div style={OVERLAY_SHADOW} onClick={onClose}></div>\r\n     <div className=\"completed-tasks-container\">\r\n       <h3 className=\"faild-task-title\">Faild Tasks</h3>\r\n      <ul className=\"completed-tasks-ul\">\r\n        {tasks && tasks.map(task=> (\r\n          <li key={task.id}  id={task.id} \r\n              className=\"completed-task-list faild-task-list\"\r\n              ref={listElement}>\r\n            <div className=\"task-card\">\r\n              <h3 className=\"task-title\">{task.title}</h3>\r\n              <p className=\"task-label\">{task.label}</p>\r\n              <span className=\"task-date\">{task.startDate} - {task.deadline}</span>\r\n            </div>\r\n            <div className=\"remove-btn\">\r\n              <img src={remove_btn} alt=\"remove button\"\r\n               onClick={() => handleRemoveClick(task.id)}/>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {`${tasks}` === `${[]}` &&\r\n       <span className=\"emptyText\"> Nothing here. <span>Good Job!</span></span>}\r\n     </div>\r\n    </>,\r\n  document.getElementById('portal')\r\n  )\r\n} \r\n\r\nconst FaildTasks = () => {\r\n  const [isOpen , setIsOpen] = useState(false);\r\n  const {faildTasks, dispatchFailure} = useContext(TaskContext);\r\n\r\n  const count = faildTasks.length;\r\n  return (\r\n    <>\r\n      <div className=\"faild-tasks\"\r\n           onClick={(e) => setIsOpen(!isOpen)}>\r\n          <img src={error_btn} alt=\"faild tasks\" />\r\n          <span className='list-counter'>{count}</span>\r\n      </div>\r\n      <FaildTasksLists tasks={faildTasks}\r\n                       removeTask={dispatchFailure}\r\n                       modalOpen={isOpen}\r\n                       onClose={(e) => setIsOpen(!isOpen)}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FaildTasks;","import React, { useContext, useState } from 'react';\r\nimport { TaskContext } from '../../Contexts/addTaskContext';\r\nimport { taskAdded } from '../../Reducers/actions';\r\n\r\n\r\nconst FormCard = () => {\r\n  \r\n  const [title, setTitle] = useState('');\r\n  const [label, setLabel] = useState('');\r\n  const [sDate, setSdate] = useState('');\r\n  const [dLine, setDline] = useState('');\r\n\r\n  const { dispatch } = useContext(TaskContext);\r\n\r\n  const HandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(taskAdded(title,label,dLine,sDate))\r\n    clearState();\r\n  }\r\n  const clearState = () => {\r\n    setTitle('');setLabel('');\r\n    setSdate('');setDline('')\r\n  }\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form className=\"form-card\" onSubmit={e => HandleSubmit(e)}>\r\n            <h3>Add</h3>\r\n            \r\n            <input type=\"text\" \r\n                  placeholder=\"\"\r\n                  className=\"title-input\"\r\n                  value={title}\r\n                  onChange={e => setTitle(e.target.value)}\r\n                   required/>\r\n                  <span>Add a task</span><br></br>\r\n\r\n           <input type=\"text\" \r\n                  placeholder=\"\"  \r\n                  className=\"label-input\"\r\n                  value={label}\r\n                  onChange={e =>setLabel(e.target.value) }\r\n                  required/>\r\n            <span>label</span><br></br>\r\n\r\n            <label htmlFor=\"start-date\">Start Date: </label>\r\n            <input type=\"date\" \r\n                   id=\"start-date\" \r\n                   className=\"start-date\"\r\n                   value={sDate}\r\n                   onChange={e => setSdate(e.target.value)} \r\n                   required/><br></br>\r\n\r\n            <label htmlFor=\"dead-line\">Due Date: </label>\r\n            <input type=\"date\"\r\n                   id=\"dead-line\"\r\n                   className=\"dead-line\"\r\n                   value={dLine}\r\n                   onChange={e =>setDline(e.target.value) } \r\n                   required/><br></br>\r\n\r\n            <input type=\"submit\"\r\n                   value=\"Add\" \r\n                   className=\"add-form success-btn\" />  \r\n          </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormCard\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/add_task-black-24dp.f32aa408.svg\";","export default __webpack_public_path__ + \"static/media/delete-black-24dp.6d6a8639.svg\";","export default __webpack_public_path__ + \"static/media/mode_edit-black-24dp.50c765ab.svg\";","import React, { useContext, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { TaskContext } from '../../../Contexts/addTaskContext';\r\nimport { taskEdited } from '../../../Reducers/actions';\r\n\r\n const MODAL_STYLE = {\r\n   position: 'fixed',\r\n   top: '50%',\r\n   left: '50%',\r\n   transform:  'translate(-50%, -50%)',\r\n   padding: '50px',\r\n   zIndex: 1000\r\n }\r\n const OVERLAY_SHADOW = {\r\n   position: 'fixed',\r\n   top: 0, left: 0,right:0,bottom:0,\r\n   backgroundColor: 'rgba(0,0,0,0.6)',\r\n   zIndex: 1000\r\n }\r\n\r\n const Modal = (props) => {\r\n   const { modalOpen,\r\n           onClose, \r\n           title,\r\n           label,\r\n           id,\r\n           sDate, dLine\r\n         } = props;\r\n   const {  dispatch } =  useContext(TaskContext);\r\n\r\n   const [editedTitle, setEditedTitle] = useState(title);\r\n   const [editedLabel, setEditedLabel] = useState(label);\r\n   const [editedSdate, setEditedSdate] = useState(sDate);\r\n   const [editedDline, setEditedDline] = useState(dLine);  \r\n    \r\n  const HandleEditSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(taskEdited(id,editedTitle,editedLabel,editedDline,editedSdate))\r\n    onClose();\r\n   } \r\n   \r\n   if(!modalOpen) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n    <div style={OVERLAY_SHADOW} onClick={onClose}></div>\r\n    <div style={MODAL_STYLE}>\r\n      {/* <button onClick={onClose}>close</button> */}\r\n      <form className=\"form-card\" onSubmit={e => HandleEditSubmit(e)}>\r\n            <h3>Edit</h3>\r\n            \r\n            <input type=\"text\" \r\n                  placeholder=\"\"\r\n                  className=\"title-input\"\r\n                  value={editedTitle}\r\n                  onChange={e => setEditedTitle(e.target.value)}/>\r\n                  <span>Edit a task</span><br></br>\r\n\r\n            <input type=\"text\" \r\n                    placeholder=\"\"  \r\n                    className=\"label-input\"\r\n                    value={editedLabel}\r\n                    onChange={e =>setEditedLabel(e.target.value) }/>\r\n                    <span>label</span><br></br>\r\n\r\n            <label htmlFor=\"start-date\">Start-Date: </label>\r\n            <input type=\"date\" \r\n                   id=\"start-date\" \r\n                   className=\"start-date\"\r\n                   value={editedSdate}\r\n                   onChange={e => setEditedSdate(e.target.value)} /><br></br>\r\n\r\n            <label htmlFor=\"dead-line\">Dead-line: </label>\r\n            <input type=\"date\"\r\n                   id=\"dead-line\"\r\n                   className=\"dead-line\"\r\n                   value={editedDline}\r\n                   onChange={e =>setEditedDline(e.target.value) } /><br></br>\r\n\r\n            <input type=\"submit\" \r\n                   className=\"add-form success-btn\"\r\n                   value='Done' />  \r\n          </form>\r\n      \r\n    </div>\r\n    </>,\r\n    document.getElementById('portal')\r\n  )\r\n\r\n}\r\n\r\nexport default Modal;","// track time and figure out how much time left\r\n// track time(date) without hours\r\nexport const currentDate = () => {\r\n  // hours ignored intentinally\r\n  const today = new Date().setHours(0,0,0,0,0)\r\n  return today;\r\n }\r\n\r\n function trackTimeInterval(deadLine, startDate) {\r\n    // One day Time in ms (milliseconds) \r\n    const one_day = 1000 * 60 * 60 * 24 ;\r\n\r\n   const Today = currentDate();\r\n   \r\n \r\n    console.log(deadLine, startDate)\r\n    if(Today > deadLine) { return  -1}\r\n      \r\n\r\n  let TimeIntervalInmilli = deadLine - startDate;\r\n       \r\n   if(Today >= (startDate + one_day)) { \r\n     console.log(Today, startDate) \r\n    TimeIntervalInmilli = deadLine - Today;\r\n   }\r\n\r\n   const TimeIntervalInDay = Math.floor(TimeIntervalInmilli / one_day);\r\n\r\n   return TimeIntervalInDay;\r\n }\r\n\r\n export default trackTimeInterval;","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport complete_btn from '../../../media/add_task-black-24dp.svg';\r\nimport delete_btn from '../../../media/delete-black-24dp.svg';\r\nimport edit_btn from '../../../media/mode_edit-black-24dp.svg';\r\nimport { TaskContext } from '../../Contexts/addTaskContext';\r\nimport { taskCompleted, taskFaild, taskRemoved } from '../../Reducers/actions';\r\nimport Modal from './D-portals/Modal';\r\nimport trackTimeInterval from './timeTracker';\r\n\r\nconst ListCard = (props) => {\r\n  const {tasks, dispatch, dispatchCompletion, dispatchFailure} = useContext(TaskContext);\r\n\r\n  const {\r\n    title,\r\n    label,\r\n    sDate,\r\n    dLine,\r\n    id\r\n  } = props;\r\n  const [timeGap, setTimeGap] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const showTimeGap = useCallback((day)=>{\r\n    \r\n      if( day < 0) {\r\n  \r\n        dispatchFailure(taskFaild(id, tasks))\r\n        dispatch(taskRemoved(id))\r\n        console.log(day)\r\n        return setTimeGap('Expired');\r\n      }\r\n      console.log(day)\r\n      return setTimeGap(`${day !== 0 ? day + `${ day > 1 ? ' days left': ' day left'}`: 'less than a day'}`);\r\n\r\n  },[dispatch, dispatchFailure, id, tasks])\r\n\r\n  useEffect(()=> {\r\n    let startDate = new Date(sDate);\r\n    let deadLine = new Date(dLine);\r\n    startDate = startDate.setHours(0,0,0,0,0); \r\n    deadLine = deadLine.setHours(0,0,0,0,0);\r\n    const UPDATE_TIME = 300000 ; // 5 min\r\n    const TimeIntervalInDay = trackTimeInterval(deadLine, startDate);\r\n    \r\n    const statusCheck = setInterval(()=> {\r\n        const TimeIntervalInDayloop = trackTimeInterval(deadLine, startDate); \r\n        return showTimeGap(TimeIntervalInDayloop)\r\n   }, UPDATE_TIME) \r\n\r\n    \r\n    // first render without Interval\r\n     showTimeGap(TimeIntervalInDay)\r\n\r\n    //  clear the lifecycle( componentwillUnmount)\r\n     return () => clearInterval(statusCheck)\r\n  },[sDate, dLine, showTimeGap])\r\n\r\n  const handleRemoveClick = (e) => {\r\n    dispatch(taskRemoved(id))\r\n  }\r\n  const handleEditClick = (e) => {\r\n     setIsModalOpen(true);\r\n  }\r\n  const handleCompleteClick = (e) => {\r\n    console.log('completed')\r\n    dispatchCompletion(taskCompleted(id, tasks))\r\n    dispatch(taskRemoved(id))\r\n  }\r\n\r\n  return (\r\n    <li className=\"list-card\">\r\n        <h3 className=\"title\">{title}</h3>\r\n        <div className=\"description\">\r\n          <p>{label}</p>\r\n        </div>\r\n        <div className=\"counter\">\r\n            <i><span className=\"counter-time\">{timeGap}</span></i>\r\n          </div>\r\n          \r\n        <div className=\"list-card-footer\">\r\n          <div className=\"show-date\">\r\n            <p> <span className=\"start-date\">{sDate}</span>{'->'} <span className=\"dead-date\">{dLine}</span> </p> \r\n          </div>\r\n          <div className=\"btns\">\r\n            <div className=\"edit-btn warning-btn\"\r\n                onClick={handleEditClick}>\r\n                  <img src={edit_btn} alt=\"edit button\"/>\r\n                </div>\r\n            <div className=\"remove-btn danger-btn\"\r\n                    onClick={handleRemoveClick}>\r\n                      <img src={delete_btn} alt=\"remove button\"/>\r\n                    </div>\r\n            <div className=\"done-btn success-btn\"\r\n                    onClick={handleCompleteClick}>\r\n                    <img src={complete_btn} alt=\"complete button\"/>  \r\n                    </div> \r\n          </div>\r\n        </div>   \r\n                {/* expermental */}\r\n       <Modal modalOpen={isModalOpen}\r\n              onClose={() => setIsModalOpen(false)}\r\n              sDate={sDate}\r\n              dLine={dLine}\r\n              title={title}\r\n              label={label}\r\n              id={id} />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ListCard;\r\n","export default __webpack_public_path__ + \"static/media/First_Add_tasks.375f9510.svg\";","import add_task_illustration from '../../../media/First_Add_tasks.svg'\r\n\r\nconst MsgHolder = (props) => {\r\n    const {\r\n      handleClick\r\n    } = props\r\n    return (\r\n    <div className=\"msg-holder\">\r\n      <div className=\"msg-holder-card\">\r\n          <div className=\"msg-illustration\">\r\n            <img src={add_task_illustration} alt=\"add task illustration\" width=\"200\" height=\"200\"/>\r\n          </div>\r\n          <div className=\"msg-text\">\r\n            <h3>Focus on your goal</h3>\r\n            <p>Get things done as you planned, boost your productivity.</p>\r\n            <button className=\"success-btn add-custom-btn\" onClick={handleClick}>* Get Started *</button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MsgHolder\r\n","import React, { useContext, useState } from 'react';\r\nimport { TaskContext } from '../../Contexts/addTaskContext';\r\nimport CompletedTasks from './D-portals/completed-tasks';\r\nimport FaildTasks from './D-portals/faild-tasks';\r\nimport FormCard from './FormCard';\r\nimport ListCard from './ListCard';\r\nimport MsgHolder from './MsgHolder';\r\n\r\nfunction Dashboard() {\r\n  const { tasks } = useContext(TaskContext);\r\n  const [showTemplete, setShowTemplete] = useState(tasks.length > 0 ? true : false)\r\n\r\n  function handleClick() {\r\n    setShowTemplete(true)\r\n  }\r\n\r\n  return(\r\n    <section id=\"Dashboard\" className=\"Dashboard\">\r\n    <nav>\r\n      <span>DashBoard</span>\r\n      <div className=\"nav-btn-wraper\">\r\n        <CompletedTasks />\r\n        <FaildTasks />\r\n      </div>\r\n    </nav>\r\n    {showTemplete ? <FormCard /> : <MsgHolder handleClick={handleClick}/>}\r\n    \r\n    <ul className=\"listCard-continer\">\r\n      {tasks.length > 0 && \r\n      tasks.map(task => <ListCard key={task.id} \r\n                                  title={task.title} \r\n                                  label={task.label}\r\n                                  sDate={task.startDate}\r\n                                  dLine={task.deadline}\r\n                                  id={task.id}/>)}\r\n    </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","export default __webpack_public_path__ + \"static/media/dashboard_black_24dp.f6a65e15.svg\";","export default __webpack_public_path__ + \"static/media/menu_open_black_24dp.e289d488.svg\";","export default __webpack_public_path__ + \"static/media/notifications_black_24dp.86d26440.svg\";","export default __webpack_public_path__ + \"static/media/person_black_24dp.eba1f953.svg\";","export default __webpack_public_path__ + \"static/media/settings_black_24dp.9764146e.svg\";","export default __webpack_public_path__ + \"static/media/todo-app-logo.9a5e5469.svg\";","export default __webpack_public_path__ + \"static/media/trending_up_black_24dp.10b48d06.svg\";","import React, { useRef } from 'react';\r\nimport dashboardIcon from '../../../media/dashboard_black_24dp.svg';\r\nimport show_more_btn from '../../../media/menu_open_black_24dp.svg';\r\nimport notificationIcon from '../../../media/notifications_black_24dp.svg';\r\nimport userIcon from '../../../media/person_black_24dp.svg';\r\nimport cogsIcon from '../../../media/settings_black_24dp.svg';\r\nimport logoIcon from '../../../media/todo-app-logo.svg';\r\nimport analyticsIcon from '../../../media/trending_up_black_24dp.svg';\r\n\r\nfunction Nav(props) {\r\n  const {\r\n    changeTab,\r\n  } = props;\r\n\r\n\r\n  const navbar = useRef(null)\r\n\r\n  const handleClick = (e) => {\r\n    e.currentTarget.classList.toggle('show-more-btn-rotate')\r\n    navbar.current.classList.toggle('navbar-show')\r\n  }\r\n  \r\n  return(\r\n    <>\r\n        <nav className=\"navbar\" ref={navbar}> \r\n          <ul className=\"nav-list\">\r\n            <li className=\"nav-list-item\">\r\n              <a href=\"#home\">\r\n              <img src={logoIcon} alt=\"dashboard-icon\"/>\r\n              <span className=\"logo-text\">\r\n               todo\r\n              </span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-list-item\"\r\n                onClick={changeTab}>\r\n              <a href=\"#Dashboard\">\r\n              <img src={dashboardIcon} alt=\"dashboard-icon\"/>\r\n                <span className=\"list-name\">Dashboard</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-list-item\"\r\n                onClick={changeTab}>\r\n            <a href=\"#Statics\">\r\n              <img src={analyticsIcon} alt=\"statics-icon\"/>\r\n                <span className=\"list-name\">Statics</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-list-item\"\r\n                onClick={changeTab}>\r\n            <a href=\"#Notification\">\r\n              <img src={notificationIcon} alt=\"Notification-icon\"/>\r\n                <span className=\"list-name\">Notification</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-list-item\"\r\n                onClick={changeTab}>\r\n            <a href=\"#Setting\">\r\n              <img src={cogsIcon} alt=\"setting-icon\"/>\r\n                <span className=\"list-name\">Setting</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-list-item\"\r\n                onClick={changeTab}>\r\n            <a href=\"#Account\">\r\n              <img src={userIcon} alt=\"user Account-icon\"/>\r\n                <span className=\"list-name\">account</span>\r\n              </a>\r\n            </li>\r\n          </ul> \r\n\r\n      </nav>\r\n          <button className=\"show-more-btn\"\r\n              onClick={(e) => handleClick(e)}\r\n              // focus loose\r\n              onBlurCapture={e => { \r\n                navbar.current.classList.remove('navbar-show')\r\n                e.currentTarget.classList.toggle('show-more-btn-rotate')}}\r\n              style={{background: 'none',\r\n              border: 'none'}}>\r\n            <img src={show_more_btn} alt=\"show more\"/>\r\n          </button>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport remove_btn from '../../../media/cancel.svg'\r\n\r\nconst NoteBar = () => {\r\n  return (\r\n    <div className=\"Bar\">\r\n      <div className=\"content-text content\">\r\n        <span>Task Title added</span><br></br>\r\n        <span >label</span><br></br>\r\n        <span>1/2/2000</span>{'  ->  '}<span>1/4/2000</span>\r\n      </div>\r\n      <div className=\"content\">\r\n        <button className=\"danger-btn\">\r\n          <img  width=\"10\" \r\n                height=\"10\" \r\n                src={remove_btn}  \r\n                alt=\"remove button\"/>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteBar;","import React from 'react';\r\nimport NoteBar from './NoteBar';\r\n\r\nfunction Notification() {\r\n  return(\r\n    <section id=\"Notification\" className=\"Notification\">\r\n      <nav>\r\n        <span>Notification</span>\r\n      </nav>\r\n      <NoteBar />\r\n      <NoteBar />\r\n      <NoteBar />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport remove_btn from '../../../media/cancel.svg'\r\n\r\nconst MODAL_STYLE = {\r\n  position: 'fixed',\r\n  bottom: '3%',\r\n  right: '0',\r\n  padding: '10px',\r\n  margin: '10px',\r\n  zIndex: 1000\r\n}\r\n\r\n\r\nconst PopUp = (props) => {\r\n  const {\r\n    isPoped,\r\n    // data,\r\n    onClose\r\n  } = props;\r\n\r\n  if(!isPoped) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div style={MODAL_STYLE}>\r\n        <div className=\"msg-holder-card\" >\r\n          <h3 align='left'>\r\n            Alert Title</h3>\r\n     \r\n          <span className=\"emptyText\"> \r\n          Body <br></br><span>Description, id, label, task title</span></span>\r\n          <button onClick={onClose} style={{position: 'absolute', top: '0', right: '0', padding: '.5rem', background: 'none'}}>\r\n            <img width=\"10\" height=\"10\" src={remove_btn} alt=\"remove button\"/>\r\n            </button>\r\n     </div>\r\n    </div>\r\n      \r\n    </>, document.getElementById('portal_msg')\r\n  )\r\n}\r\n\r\nexport default PopUp;\r\n","import React, { useRef, useState, useEffect} from 'react';\r\n\r\nfunction Setting() {\r\n  const isTheme = localStorage.getItem(\"darkMode\")\r\n  const [switchState, setSwitchState] = useState(isTheme ? JSON.parse(isTheme): _Default_ThemeVal() )\r\n\r\n  const switcher = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    if(switcher && JSON.stringify(switchState) !== \"false\") {\r\n      switcher.current.classList.add(\"switch-slide\")\r\n      localStorage.setItem(\"darkMode\", true)\r\n    } else {\r\n       switcher.current.classList.remove(\"switch-slide\")\r\n       localStorage.setItem(\"darkMode\", false)\r\n    }\r\n  }, [switchState])\r\n\r\n  function handleClick(e) {\r\n    if(switcher.current.classList.contains(\"switch-slide\")) {\r\n      setSwitchState(false)\r\n    } else { \r\n      setSwitchState(true)\r\n    } \r\n  }\r\n\r\n  function _Default_ThemeVal() {\r\n    localStorage.setItem(\"darkMode\", false)\r\n    return false\r\n  }\r\n \r\n  return (\r\n    <section id=\"Setting\" className=\"Setting\">\r\n      <nav>\r\n      <span>Setting</span>\r\n    </nav>\r\n    <div className=\"setting-content\">\r\n    <div className=\"theme\">\r\n      <h1>Theme</h1>\r\n      <p>Dark mode</p>\r\n      <button className=\"switch-btn\" onClick={handleClick}>\r\n        <span className=\"switch\" ref={switcher} ></span>\r\n      </button>\r\n      {\r\n        switchState ? <span>on</span> : <span>off</span>\r\n      }\r\n    </div>\r\n    </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Setting;\r\n","import React from 'react';\r\n\r\nconst ChartGraph = () => {\r\n  return (\r\n    <div className=\"chart-container\">\r\n        <h1>Data visualization section</h1>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ChartGraph;\r\n","import React from 'react';\r\nimport ChartGraph from './ChartGraph';\r\n\r\n\r\nfunction Statics() {\r\n  return (\r\n    <section id=\"Statics\" className=\"Statics\">\r\n      <nav>\r\n      <span>Statics</span>\r\n    </nav>\r\n    <div className=\"select-date\">\r\n      <select  id=\"date-select\">\r\n        <option value=\"30 days\">30 days</option>\r\n        <option value=\"7 days\">7 days</option>\r\n      </select>\r\n    </div>\r\n      \r\n      <ChartGraph />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Statics;","import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport Account from './Components//Account/Account';\r\nimport Dashboard from './Components/Dasboard/Dashboard';\r\nimport Nav from './Components/Nav/Nav';\r\nimport Notification from './Components/Notification/Notification';\r\nimport PopUp from './Components/Notification/PopUp';\r\nimport Setting from './Components/Setting/Setting';\r\nimport Statics from './Components/statics/Statics';\r\nimport AddTaskContextProvider from './Contexts/addTaskContext';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [navStatus, setNavStatus] = useState('Dashboard');\r\n  const [isPoped, setIsPoped] = useState(false)\r\n  \r\n  let currentTab; \r\n  \r\n   switch (navStatus) {\r\n     case 'Dashboard':\r\n       console.log(navStatus);\r\n       currentTab = <Dashboard /> ;\r\n       break;\r\n     case 'Statics':\r\n      console.log(navStatus);\r\n       currentTab = <Statics /> ;\r\n       break;\r\n     case 'Notification':\r\n      console.log(navStatus);\r\n       currentTab = <Notification /> ;\r\n       break;\r\n     case 'Account':\r\n      console.log(navStatus);\r\n       currentTab = <Account /> ;\r\n       break;\r\n     case 'Setting':\r\n      console.log(navStatus);\r\n       currentTab = <Setting /> ;\r\n       break;\r\n\r\n     default:\r\n      currentTab = <Dashboard /> ;\r\n       break;\r\n   }\r\n \r\n function changeTab(e) {\r\n  let element = e.currentTarget.children;\r\n  let navName = element[0].getAttribute('href');\r\n  navName = navName.slice(1);\r\n  setNavStatus(navName);\r\n}\r\n  return (\r\n    <AddTaskContextProvider>\r\n      {currentTab}\r\n   <Nav changeTab={changeTab} />\r\n   <PopUp data={'...'}\r\n          isPoped={isPoped}\r\n          onClose={() => setIsPoped(false)}/>\r\n    </AddTaskContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/App';\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}
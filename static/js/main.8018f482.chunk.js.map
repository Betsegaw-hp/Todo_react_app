{"version":3,"sources":["js/Components/Account/Account.js","js/Reducers/actionTypes.js","js/Reducers/TaskReducer.js","js/Contexts/addTaskContext.js","media/cancel.svg","media/done_all-black-24dp.svg","js/Reducers/actions.js","js/Components/Dasboard/D-portals/completed-tasks.js","media/assignment_late-black-24dp.svg","js/Components/Dasboard/D-portals/faild-tasks.js","js/Components/Dasboard/FormCard.js","media/add_task-black-24dp.svg","media/delete-black-24dp.svg","media/mode_edit-black-24dp.svg","js/Components/Dasboard/D-portals/Modal.js","js/Components/Dasboard/timeTracker.js","js/Components/Dasboard/ListCard.js","js/Components/Dasboard/Dashboard.js","media/dashboard_black_24dp.svg","media/more_horiz-black-24dp.svg","media/notifications_black_24dp.svg","media/person_black_24dp.svg","media/settings_black_24dp.svg","media/todo-app-logo.svg","media/trending_up_black_24dp.svg","js/Components/Nav/Nav.js","js/Components/Notification/NoteBar.js","js/Components/Notification/Notification.js","js/Components/Notification/PopUp.js","js/Components/Setting/Setting.js","js/Components/statics/ChartGraph.js","js/Components/statics/Statics.js","js/App.js","index.js"],"names":["Account","id","className","TASK_ADDED","TASK_EDITED","TASK_REMOVED","TASK_COMPLETED","C_T_REMOVED","TASK_FAILD","F_T_REMOVED","taskReducer","state","action","type","actionType","title","payload","label","deadline","startDate","uuid","editedTasks","map","task","i","filter","filteredTask","tasks","find","filtered_F_Task","TaskContext","createContext","AddTaskContextProvider","props","useReducer","TaskReducer","dispatch","completedTasks","dispatchCompletion","faildTasks","dispatchFailure","useEffect","db","DBopenReq","indexedDB","open","addToDB","storeName","Item","tx","transaction","oncomplete","e","console","log","onerror","objectStore","length","clear","onsuccess","forEach","put","target","result","warn","onupgradeneeded","event","alert","error","DBtasks","createObjectStore","keyPath","DBcompletedTasks","DBfaildTasks","createIndex","unique","Provider","value","children","taskRemoved","OVERLAY_SHADOW","position","top","left","right","bottom","backgroundColor","zIndex","CompletedTasksLists","modalOpen","onClose","removeTask","listElement","useRef","handleRemoveClick","CompletedTaskRemoved","createPortal","style","onClick","ref","src","remove_btn","alt","document","getElementById","CompletedTasks","useState","isOpen","setIsOpen","useContext","count","complete_btn","FaildTasksLists","FaildTaskRemoved","FaildTasks","error_btn","FormCard","setTitle","setLabel","sDate","setSdate","dLine","setDline","HandleSubmit","preventDefault","taskAdded","clearState","onSubmit","placeholder","onChange","required","htmlFor","MODAL_STYLE","transform","padding","Modal","editedTitle","setEditedTitle","editedLabel","setEditedLabel","editedSdate","setEditedSdate","editedDline","setEditedDline","HandleEditSubmit","taskEdited","ReactDOM","trackTimeInterval","deadLine","one_day","Today","Date","setHours","TimeIntervalInmilli","Math","floor","ListCard","timeGap","setTimeGap","isModalOpen","setIsModalOpen","showTimeGap","useCallback","day","taskFaild","TimeIntervalInDay","statusCheck","setInterval","TimeIntervalInDayloop","clearInterval","edit_btn","delete_btn","taskCompleted","MsgHolder","Dashboard","Nav","changeTab","navbar","href","logoIcon","dashboardIcon","analyticsIcon","notificationIcon","cogsIcon","userIcon","currentTarget","classList","toggle","current","handleClick","show_more_btn","NoteBar","Notification","margin","PopUp","isPoped","data","Setting","localStorage","getItem","switchState","setSwitchState","switcher","contains","setItem","ChartGraph","Statics","App","currentTab","navStatus","setNavStatus","setIsPoped","navName","getAttribute","slice","render"],"mappings":"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","file":"static/js/main.8018f482.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Account = () => {\r\n  return (\r\n    <section id=\"Account\" className=\"Account\">\r\n      <nav>\r\n        <span>Account</span>\r\n      </nav>\r\n      <div className=\"warning\">\r\n        <h4>This Feature is not available yet!</h4>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Account;\r\n","export const TASK_ADDED = \"taskAdded\";\r\nexport const TASK_EDITED = \"taskEdited\";\r\nexport const TASK_REMOVED = \"taskRemoved\";\r\nexport const TASK_COMPLETED = \"taskCompleted\";\r\nexport const C_T_REMOVED = \"CompletedTaskRemoved\";\r\nexport const TASK_FAILD = \"taskFaild\";\r\nexport const F_T_REMOVED = \"FaildTaskRemoved\";","import uuid from 'uuid/dist/v4';\r\nimport * as actionType from './actionTypes';\r\n\r\n// DRY detected, Optimization needed\r\n\r\nconst taskReducer = (state, action) => {\r\n  switch (action.type) {\r\n      // call from dispatch\r\n    case actionType.TASK_ADDED: // (only valid on dispatch)\r\n      return [...state, { \r\n         title: action.payload.title,\r\n         label: action.payload.label,\r\n         deadline: action.payload.deadline,\r\n         startDate: action.payload.startDate, id: uuid()}]\r\n\r\n    case actionType.TASK_EDITED: //  (only valid on dispatch)\r\n      const editedTasks = state.map((task, i) => {\r\n        if(task.id === action.payload.id) {\r\n          return state[i] = { \r\n            title: action.payload.title,\r\n            label: action.payload.label,\r\n            deadline: action.payload.deadline,\r\n            startDate: action.payload.startDate, id: uuid()}\r\n      }\r\n      return task\r\n    })\r\n    state = editedTasks\r\n    return state\r\n    case actionType.TASK_REMOVED: //  (only valid on dispatch)\r\n      return state.filter(task => task.id !== action.payload.id)\r\n\r\n\r\n      // call from dispatchCompletion\r\n    case actionType.TASK_COMPLETED:{ //  (only valid on dispatchCompletion)\r\n      const filteredTask = (action.payload.tasks).find(task => task.id === action.payload.id)\r\n      return [...state, filteredTask]\r\n      }\r\n\r\n    case actionType.C_T_REMOVED: // (only valid on dispatchCompletion)\r\n      return state.filter(task => task.id !== action.payload.id)\r\n\r\n\r\n      // call from dispatchFailure\r\n    case actionType.TASK_FAILD: { // (only valid on dispatchFailure)\r\n      const filtered_F_Task =(action.payload.tasks).find(task => task.id === action.payload.id)\r\n      return [...state, filtered_F_Task]\r\n    }\r\n    case actionType.F_T_REMOVED: // (only valid on dispatchFailure)\r\n      return state.filter(task => task.id !== action.payload.id)\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default taskReducer","import React, { createContext, useEffect, useReducer } from 'react';\r\nimport TaskReducer from '../Reducers/TaskReducer';\r\n\r\nexport const TaskContext = createContext();\r\n\r\nconst AddTaskContextProvider = (props) => {\r\n  const [tasks, dispatch] = useReducer(TaskReducer, []);\r\n  const [completedTasks, dispatchCompletion] = useReducer(TaskReducer, []);\r\n  const [faildTasks, dispatchFailure] = useReducer(TaskReducer, []);\r\n  \r\n\r\n  useEffect(()=> {\r\n  \r\n  },[tasks, completedTasks, faildTasks]) \r\n\r\n\r\n\r\n let db, DB_version = 1;\r\n const DBopenReq = indexedDB.open(`HAPPY-TODO-App`, DB_version)\r\n  DBopenReq.onerror = (e) => {\r\n        //  on error\r\n        db = e.target.result;\r\n        \r\n        console.warn(db)\r\n      }\r\n  DBopenReq.onupgradeneeded = (e) => {\r\n    // on upgradeneeded\r\n    db = e.target.result;\r\n    db.onerror = function(event) {\r\n      alert(`Error loading database: ${event.target.error}`);\r\n  }\r\n    \r\n  // create objecetStore \r\n\r\n  const DBtasks = db.createObjectStore('Tasks', {keyPath: 'id'})\r\n  const DBcompletedTasks = db.createObjectStore('Completed_tasks', {keyPath: 'id'})\r\n  const DBfaildTasks = db.createObjectStore('Faild_tasks', {keyPath: 'id'})\r\n\r\n  DBtasks.createIndex('id', 'id', { unique : true})\r\n  DBtasks.createIndex('title', 'title', { unique : false})\r\n  DBcompletedTasks.createIndex('id', 'id', { unique : true})\r\n  DBcompletedTasks.createIndex('title', 'title', { unique : false})\r\n  DBfaildTasks.createIndex('id', 'id', { unique : false})\r\n  DBfaildTasks.createIndex('title', 'title', { unique : false})\r\n  console.log('obJect Store created')\r\n} \r\n   DBopenReq.onsuccess = e => {\r\n    db = DBopenReq.result;\r\n    console.log('success', db)\r\n \r\n    addToDB('Tasks', tasks)\r\n    addToDB('Completed_tasks', completedTasks)\r\n    addToDB('Faild_tasks', faildTasks)\r\n    // readDB('Tasks')\r\n  }\r\n\r\n  function addToDB(storeName , Item ) {\r\n    let tx = db.transaction(storeName, 'readwrite')\r\n\r\n    tx.oncomplete = e => {\r\n      console.log('tx completed', tx)\r\n    }\r\n    tx.onerror = e => {\r\n      console.log('tx on error', tx)\r\n    }\r\n\r\n    let objectStore = tx.objectStore(storeName), oSRequest;\r\n    if(Item.length > 0){\r\n      //  clear the store\r\n    let oSclearReq = objectStore.clear();\r\n       oSclearReq.onsuccess = () => {\r\n         console.log('store cleared')\r\n       }\r\n     Item.forEach(task => {\r\n       oSRequest = objectStore.put(task);\r\n      oSRequest.onsuccess = e => {\r\n      console.log(task.id, 'added successfuly')\r\n    }\r\n    });\r\n    }\r\n    \r\n  }\r\n  //  fix nedded\r\n  // const readDB = (storeName)  => {\r\n  //   return  new Promise((resolve, reject ) => {\r\n  //     let tx = db.transaction(storeName, 'readonly');\r\n  \r\n  //     tx.oncomplete = e => {\r\n  //       console.log('tx completed', tx)\r\n  //     }\r\n  //     tx.onerror = e => {\r\n  //       console.log('tx on error', tx)\r\n  //     }\r\n  \r\n  //     let objectStore = tx.objectStore(storeName);\r\n  //     let  getStoreReq =  objectStore.getAll();\r\n  //     if ( getStoreReq.onsuccess !== null) {\r\n  //        getStoreReq.onsuccess =  e => {\r\n  //         let req = getStoreReq.result;\r\n  //         console.info(storeName, 'readed successfully')\r\n  //         resolve(req)\r\n  //       }\r\n  //     getStoreReq.onerror = e => {\r\n  //     console.warn(e, 'error occured when req' )\r\n  //      }\r\n  //     } else {\r\n  //       reject()\r\n  //     }\r\n  //   })   \r\n  // }\r\n\r\n   \r\n  return (\r\n    <TaskContext.Provider value={{tasks,completedTasks,faildTasks,dispatch, dispatchCompletion, dispatchFailure}}>\r\n      {props.children}\r\n    </TaskContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AddTaskContextProvider;","export default __webpack_public_path__ + \"static/media/cancel.ced98c52.svg\";","export default __webpack_public_path__ + \"static/media/done_all-black-24dp.dc6fc541.svg\";","import * as actionType from './actionTypes';\r\n\r\n\r\nexport const taskAdded = (title, label,deadline, startDate,id) => ({\r\n  type: actionType.TASK_ADDED,\r\n  payload: {title, label,deadline, startDate, id}\r\n})\r\n\r\nexport const taskEdited = (id,title, label,deadline, startDate) => ({\r\n  type: actionType.TASK_EDITED,\r\n  payload: {title, label,deadline, startDate, id}\r\n})\r\n\r\nexport const taskRemoved = id => ({\r\n  type: actionType.TASK_REMOVED,\r\n  payload: {\r\n    id\r\n  }\r\n})\r\nexport const taskCompleted = (id, tasks) => ({\r\n  type: actionType.TASK_COMPLETED,\r\n  payload: {\r\n    id, tasks\r\n  }\r\n})\r\nexport const CompletedTaskRemoved = id => ({\r\n  type: actionType.C_T_REMOVED,\r\n  payload: {\r\n    id\r\n  }\r\n})\r\nexport const taskFaild = (id, tasks) => ({\r\n  type: actionType.TASK_FAILD,\r\n  payload: {\r\n    id, tasks\r\n  }\r\n})\r\nexport const FaildTaskRemoved = id => ({\r\n  type: actionType.F_T_REMOVED,\r\n  payload: {\r\n    id\r\n  }\r\n})\r\n\r\n\r\n//  TASK_ADDED = \"taskAdded\";\r\n//  TASK_EDITED = \"taskEdited\";\r\n//  TASK_REMOVED = \"taskRemoved\";\r\n//  TASK_COMPLETED = \"taskCompleted\";\r\n//  C_T_REMOVED = \"CompletedTaskRemoved\";\r\n//  TASK_FAILD = \"taskFaild\";\r\n//  F_T_REMOVED = \"FaildTaskRemoved\";","import React, { useContext, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport remove_btn from '../../../../media/cancel.svg';\r\nimport complete_btn from '../../../../media/done_all-black-24dp.svg';\r\nimport { TaskContext } from '../../../Contexts/addTaskContext';\r\nimport { CompletedTaskRemoved } from '../../../Reducers/actions';\r\n\r\n const OVERLAY_SHADOW = {\r\n   position: 'fixed',\r\n   top: 0, left: 0,right:0,bottom:0,\r\n   backgroundColor: 'rgba(0,0,0,0.6)',\r\n   zIndex: 1000\r\n }\r\n\r\nfunction CompletedTasksLists({tasks, modalOpen, onClose, removeTask})  {\r\n    \r\n    const listElement = useRef(null);   \r\n       \r\n    if(!modalOpen) return null;\r\n\r\n    const handleRemoveClick = (id) => {\r\n      if(listElement)  {\r\n       removeTask(CompletedTaskRemoved(id));\r\n      }\r\n    }\r\n   \r\n   return createPortal(\r\n     <>\r\n     <div style={OVERLAY_SHADOW} onClick={onClose}></div>\r\n     <div className=\"completed-tasks-container\">\r\n       <h3 className=\"completed-task-title\">Completed Tasks</h3>\r\n      <ul className=\"completed-tasks-ul\">\r\n        {tasks.length > 0 && tasks.map(task=> (\r\n          <li key={task.id}  id={task.id}      className=\"completed-task-list\"\r\n          ref={listElement}>\r\n            <div className=\"task-card\">\r\n              <h4 className=\"task-title\">{task.title}</h4>\r\n              <p className=\"task-label\">{task.label}</p>\r\n              <span className=\"task-date\">{task.startDate} - {task.deadline}</span>\r\n            </div>\r\n            <div className=\"remove-btn\">\r\n              <img src={remove_btn} alt=\"remove button\" \r\n              onClick={() => handleRemoveClick(task.id)}/>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {`${tasks}` === `${[]}` && \r\n      <span className=\"emptyText\"> Nothing here. <span>But you can make one!</span></span>}\r\n     </div>\r\n     </>,\r\n    document.getElementById('portal')\r\n     \r\n   )\r\n }\r\n \r\n const CompletedTasks = () => {\r\n   const [isOpen , setIsOpen] = useState(false);\r\n   const { completedTasks, dispatchCompletion } = useContext(TaskContext)\r\n\r\n   const count = completedTasks.length;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"completed-tasks\"\r\n           onClick={(e) => setIsOpen(!isOpen)}>\r\n            <img src={complete_btn} alt=\"complete tasks\"/>\r\n            <span className='list-counter'>{count}</span>\r\n      </div>\r\n      <CompletedTasksLists tasks={completedTasks}\r\n                           removeTask={dispatchCompletion}\r\n                           modalOpen={isOpen}\r\n                           onClose={(e) => setIsOpen(!isOpen)}/>\r\n     \r\n    </>\r\n  )\r\n}\r\n \r\n\r\nexport default CompletedTasks;","export default __webpack_public_path__ + \"static/media/assignment_late-black-24dp.9589897b.svg\";","import React, { useContext, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport error_btn from '../../../../media/assignment_late-black-24dp.svg';\r\nimport remove_btn from '../../../../media/cancel.svg';\r\nimport { TaskContext } from '../../../Contexts/addTaskContext';\r\nimport { FaildTaskRemoved } from '../../../Reducers/actions';\r\n\r\nconst OVERLAY_SHADOW = {\r\n  position: 'fixed',\r\n  top: 0, left: 0,right:0,bottom:0,\r\n  backgroundColor: 'rgba(0,0,0,0.6)',\r\n  zIndex: 1000\r\n}\r\n\r\nconst FaildTasksLists = ({tasks, modalOpen, removeTask, onClose}) => {\r\n\r\n  const listElement = useRef(null);   \r\n       \r\n  if(!modalOpen) return null;\r\n\r\n  const handleRemoveClick = (id) => {\r\n    if(listElement)  {\r\n     removeTask(FaildTaskRemoved(id));\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <>\r\n     <div style={OVERLAY_SHADOW} onClick={onClose}></div>\r\n     <div className=\"completed-tasks-container\">\r\n       <h3 className=\"faild-task-title\">Faild Tasks</h3>\r\n      <ul className=\"completed-tasks-ul\">\r\n        {tasks && tasks.map(task=> (\r\n          <li key={task.id}  id={task.id} \r\n              className=\"completed-task-list faild-task-list\"\r\n              ref={listElement}>\r\n            <div className=\"task-card\">\r\n              <h3 className=\"task-title\">{task.title}</h3>\r\n              <p className=\"task-label\">{task.label}</p>\r\n              <span className=\"task-date\">{task.startDate} - {task.deadline}</span>\r\n            </div>\r\n            <div className=\"remove-btn\">\r\n              <img src={remove_btn} alt=\"remove button\"\r\n               onClick={() => handleRemoveClick(task.id)}/>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {`${tasks}` === `${[]}` &&\r\n       <span className=\"emptyText\"> Nothing here. <span>Good Job!</span></span>}\r\n     </div>\r\n    </>,\r\n  document.getElementById('portal')\r\n  )\r\n} \r\n\r\nconst FaildTasks = () => {\r\n  const [isOpen , setIsOpen] = useState(false);\r\n  const {faildTasks, dispatchFailure} = useContext(TaskContext);\r\n\r\n  const count = faildTasks.length;\r\n  return (\r\n    <>\r\n      <div className=\"faild-tasks\"\r\n           onClick={(e) => setIsOpen(!isOpen)}>\r\n          <img src={error_btn} alt=\"faild tasks\" />\r\n          <span className='list-counter'>{count}</span>\r\n      </div>\r\n      <FaildTasksLists tasks={faildTasks}\r\n                       removeTask={dispatchFailure}\r\n                       modalOpen={isOpen}\r\n                       onClose={(e) => setIsOpen(!isOpen)}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FaildTasks;","import React, { useContext, useState } from 'react';\r\nimport { TaskContext } from '../../Contexts/addTaskContext';\r\nimport { taskAdded } from '../../Reducers/actions';\r\n \r\n\r\n\r\nconst FormCard = () => {\r\n  \r\n  const [title, setTitle] = useState('');\r\n  const [label, setLabel] = useState('');\r\n  const [sDate, setSdate] = useState('');\r\n  const [dLine, setDline] = useState('');\r\n\r\n  const { dispatch } = useContext(TaskContext);\r\n\r\n  const HandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(taskAdded(title,label,dLine,sDate))\r\n    clearState();\r\n  }\r\n  const clearState = () => {\r\n    setTitle('');setLabel('');\r\n    setSdate('');setDline('')\r\n  }\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form className=\"form-card\" onSubmit={e => HandleSubmit(e)}>\r\n            <h3>Add</h3>\r\n            \r\n            <input type=\"text\" \r\n                  placeholder=\"\"\r\n                  className=\"title-input\"\r\n                  value={title}\r\n                  onChange={e => setTitle(e.target.value)}\r\n                   required/>\r\n                  <span>Add a task</span><br></br>\r\n\r\n           <input type=\"text\" \r\n                  placeholder=\"\"  \r\n                  className=\"label-input\"\r\n                  value={label}\r\n                  onChange={e =>setLabel(e.target.value) }\r\n                  required/>\r\n            <span>label</span><br></br>\r\n\r\n            <label htmlFor=\"start-date\">Start-Date: </label>\r\n            <input type=\"date\" \r\n                   id=\"start-date\" \r\n                   className=\"start-date\"\r\n                   value={sDate}\r\n                   onChange={e => setSdate(e.target.value)} \r\n                   required/><br></br>\r\n\r\n            <label htmlFor=\"dead-line\">Dead-line: </label>\r\n            <input type=\"date\"\r\n                   id=\"dead-line\"\r\n                   className=\"dead-line\"\r\n                   value={dLine}\r\n                   onChange={e =>setDline(e.target.value) } \r\n                   required/><br></br>\r\n\r\n            <input type=\"submit\"\r\n                   value=\"Add\" \r\n                   className=\"add-form success-btn\" />  \r\n          </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormCard\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/add_task-black-24dp.f32aa408.svg\";","export default __webpack_public_path__ + \"static/media/delete-black-24dp.6d6a8639.svg\";","export default __webpack_public_path__ + \"static/media/mode_edit-black-24dp.50c765ab.svg\";","import React, { useContext, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { TaskContext } from '../../../Contexts/addTaskContext';\r\nimport { taskEdited } from '../../../Reducers/actions';\r\n\r\n const MODAL_STYLE = {\r\n   position: 'fixed',\r\n   top: '50%',\r\n   left: '50%',\r\n   transform:  'translate(-50%, -50%)',\r\n   padding: '50px',\r\n   zIndex: 1000\r\n }\r\n const OVERLAY_SHADOW = {\r\n   position: 'fixed',\r\n   top: 0, left: 0,right:0,bottom:0,\r\n   backgroundColor: 'rgba(0,0,0,0.6)',\r\n   zIndex: 1000\r\n }\r\n\r\n const Modal = (props) => {\r\n   const { modalOpen,\r\n           onClose, \r\n           title,\r\n           label,\r\n           id,\r\n           sDate, dLine\r\n         } = props;\r\n   const {  dispatch } =  useContext(TaskContext);\r\n\r\n   const [editedTitle, setEditedTitle] = useState(title);\r\n   const [editedLabel, setEditedLabel] = useState(label);\r\n   const [editedSdate, setEditedSdate] = useState(sDate);\r\n   const [editedDline, setEditedDline] = useState(dLine);  \r\n    \r\n  const HandleEditSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(taskEdited(id,editedTitle,editedLabel,editedDline,editedSdate))\r\n    onClose();\r\n   } \r\n   \r\n   if(!modalOpen) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n    <div style={OVERLAY_SHADOW} onClick={onClose}></div>\r\n    <div style={MODAL_STYLE}>\r\n      {/* <button onClick={onClose}>close</button> */}\r\n      <form className=\"form-card\" onSubmit={e => HandleEditSubmit(e)}>\r\n            <h3>Edit</h3>\r\n            \r\n            <input type=\"text\" \r\n                  placeholder=\"\"\r\n                  className=\"title-input\"\r\n                  value={editedTitle}\r\n                  onChange={e => setEditedTitle(e.target.value)}/>\r\n                  <span>Edit a task</span><br></br>\r\n\r\n            <input type=\"text\" \r\n                    placeholder=\"\"  \r\n                    className=\"label-input\"\r\n                    value={editedLabel}\r\n                    onChange={e =>setEditedLabel(e.target.value) }/>\r\n                    <span>label</span><br></br>\r\n\r\n            <label htmlFor=\"start-date\">Start-Date: </label>\r\n            <input type=\"date\" \r\n                   id=\"start-date\" \r\n                   className=\"start-date\"\r\n                   value={editedSdate}\r\n                   onChange={e => setEditedSdate(e.target.value)} /><br></br>\r\n\r\n            <label htmlFor=\"dead-line\">Dead-line: </label>\r\n            <input type=\"date\"\r\n                   id=\"dead-line\"\r\n                   className=\"dead-line\"\r\n                   value={editedDline}\r\n                   onChange={e =>setEditedDline(e.target.value) } /><br></br>\r\n\r\n            <input type=\"submit\" \r\n                   className=\"add-form success-btn\"\r\n                   value='Done' />  \r\n          </form>\r\n      \r\n    </div>\r\n    </>,\r\n    document.getElementById('portal')\r\n  )\r\n\r\n}\r\n\r\nexport default Modal;","// track time and figure out how much time left\r\n// track time(date) without hours\r\nconst currentDate = () => {\r\n  // hours ignored intentinally\r\n  const today = new Date().setHours(0,0,0,0,0)\r\n  return today;\r\n }\r\n\r\n function trackTimeInterval(deadLine, startDate) {\r\n    // One day Time in ms (milliseconds) \r\n    const one_day = 1000 * 60 * 60 * 24 ;\r\n\r\n  //  browser calender & local time have one day diff. so make it right\r\n   deadLine += one_day;\r\n   startDate += one_day;\r\n\r\n   const Today = currentDate();\r\n   \r\n \r\n    console.log(deadLine, startDate)\r\n    if(Today > deadLine) { return  -1}\r\n      \r\n\r\n  let TimeIntervalInmilli = deadLine - startDate;\r\n       \r\n   if(Today >= (startDate + one_day)) { \r\n     console.log(Today, startDate) \r\n    TimeIntervalInmilli = deadLine - Today;\r\n   }\r\n\r\n   const TimeIntervalInDay = Math.floor(TimeIntervalInmilli / one_day);\r\n\r\n   return TimeIntervalInDay;\r\n }\r\n\r\n export default trackTimeInterval;","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport complete_btn from '../../../media/add_task-black-24dp.svg';\r\nimport delete_btn from '../../../media/delete-black-24dp.svg';\r\nimport edit_btn from '../../../media/mode_edit-black-24dp.svg';\r\nimport { TaskContext } from '../../Contexts/addTaskContext';\r\nimport { taskCompleted, taskFaild, taskRemoved } from '../../Reducers/actions';\r\nimport Modal from './D-portals/Modal';\r\nimport trackTimeInterval from './timeTracker';\r\n\r\nconst ListCard = (props) => {\r\n  const {tasks, dispatch, dispatchCompletion, dispatchFailure} = useContext(TaskContext);\r\n\r\n  const {\r\n    title,\r\n    label,\r\n    sDate,\r\n    dLine,\r\n    id\r\n  } = props;\r\n  const [timeGap, setTimeGap] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const showTimeGap = useCallback((day)=>{\r\n    \r\n      if( day < 0) {\r\n  \r\n        dispatchFailure(taskFaild(id, tasks))\r\n        dispatch(taskRemoved(id))\r\n        console.log(day)\r\n        return setTimeGap('Expired');\r\n      }\r\n      console.log(day)\r\n      return setTimeGap(`${day !== 0 ? day + ' day left': 'less than a day'}`);\r\n\r\n  },[dispatch, dispatchFailure, id, tasks])\r\n\r\n  useEffect(()=> {\r\n    let startDate = new Date(sDate);\r\n    let deadLine = new Date(dLine);\r\n    startDate = startDate.setHours(0,0,0,0,0); \r\n    deadLine = deadLine.setHours(0,0,0,0,0);\r\n    const UPDATE_TIME = 300000 ; // 5 min\r\n    const TimeIntervalInDay = trackTimeInterval(deadLine, startDate);\r\n    \r\n    const statusCheck = setInterval(()=> {\r\n        const TimeIntervalInDayloop = trackTimeInterval(deadLine, startDate); \r\n        return showTimeGap(TimeIntervalInDayloop)\r\n   }, UPDATE_TIME) \r\n\r\n    \r\n    // first render without Interval\r\n     showTimeGap(TimeIntervalInDay)\r\n\r\n    //  clear the lifecycle( componentwillUnmount)\r\n     return () => clearInterval(statusCheck)\r\n  },[sDate, dLine, showTimeGap])\r\n\r\n  const handleRemoveClick = (e) => {\r\n    dispatch(taskRemoved(id))\r\n  }\r\n  const handleEditClick = (e) => {\r\n     setIsModalOpen(true);\r\n  }\r\n  const handleCompleteClick = (e) => {\r\n    console.log('completed')\r\n    dispatchCompletion(taskCompleted(id, tasks))\r\n    dispatch(taskRemoved(id))\r\n  }\r\n\r\n  return (\r\n    <li className=\"list-card\">\r\n        <h3 className=\"title\">{title}</h3>\r\n        <div className=\"description\">\r\n          <p>{label}</p>\r\n        </div>\r\n        <div className=\"counter\">\r\n            <i><span className=\"counter-time\">{timeGap}</span></i>\r\n          </div>\r\n          \r\n        <div className=\"list-card-footer\">\r\n          <div className=\"show-date\">\r\n            <p> <span className=\"start-date\">{sDate}</span>{'->'} <span className=\"dead-date\">{dLine}</span> </p> \r\n          </div>\r\n          <div className=\"btns\">\r\n            <div className=\"edit-btn warning-btn\"\r\n                onClick={handleEditClick}>\r\n                  <img src={edit_btn} alt=\"edit button\"/>\r\n                </div>\r\n            <div className=\"remove-btn danger-btn\"\r\n                    onClick={handleRemoveClick}>\r\n                      <img src={delete_btn} alt=\"remove button\"/>\r\n                    </div>\r\n            <div className=\"done-btn success-btn\"\r\n                    onClick={handleCompleteClick}>\r\n                    <img src={complete_btn} alt=\"complete button\"/>  \r\n                    </div> \r\n          </div>\r\n        </div>   \r\n                {/* expermental */}\r\n       <Modal modalOpen={isModalOpen}\r\n              onClose={() => setIsModalOpen(false)}\r\n              sDate={sDate}\r\n              dLine={dLine}\r\n              title={title}\r\n              label={label}\r\n              id={id} />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ListCard;\r\n","import React, { useContext } from 'react';\r\nimport { TaskContext } from '../../Contexts/addTaskContext';\r\nimport CompletedTasks from './D-portals/completed-tasks';\r\nimport FaildTasks from './D-portals/faild-tasks';\r\nimport FormCard from './FormCard';\r\nimport ListCard from './ListCard';\r\n\r\nconst MsgHolder = () => {\r\n  return (\r\n    <div className=\"msg-holder\">\r\n      <h4>You don't have any task on progress.</h4>\r\n      <p>What do you want to do today?</p>\r\n    </div>\r\n  )\r\n}\r\nfunction Dashboard() {\r\n  const { tasks } = useContext(TaskContext);\r\n\r\n  return(\r\n    <section id=\"Dashboard\" className=\"Dashboard\">\r\n    <nav>\r\n      <span>DashBoard</span>\r\n      <div className=\"nav-btn-wraper\">\r\n        <CompletedTasks />\r\n        <FaildTasks />\r\n      </div>\r\n    </nav>\r\n    <FormCard />\r\n    <ul className=\"listCard-continer\">\r\n      {tasks.length > 0 ? \r\n      tasks.map(task => <ListCard key={task.id} \r\n                                  title={task.title} \r\n                                  label={task.label}\r\n                                  sDate={task.startDate}\r\n                                  dLine={task.deadline}\r\n                                  id={task.id}/>):\r\n                                  <MsgHolder />}\r\n    </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","export default __webpack_public_path__ + \"static/media/dashboard_black_24dp.f6a65e15.svg\";","export default __webpack_public_path__ + \"static/media/more_horiz-black-24dp.d9c313b0.svg\";","export default __webpack_public_path__ + \"static/media/notifications_black_24dp.86d26440.svg\";","export default __webpack_public_path__ + \"static/media/person_black_24dp.eba1f953.svg\";","export default __webpack_public_path__ + \"static/media/settings_black_24dp.9764146e.svg\";","export default __webpack_public_path__ + \"static/media/todo-app-logo.9a5e5469.svg\";","export default __webpack_public_path__ + \"static/media/trending_up_black_24dp.10b48d06.svg\";","import React, { useRef } from 'react';\r\nimport dashboardIcon from '../../../media/dashboard_black_24dp.svg';\r\nimport show_more_btn from '../../../media/more_horiz-black-24dp.svg';\r\nimport notificationIcon from '../../../media/notifications_black_24dp.svg';\r\nimport userIcon from '../../../media/person_black_24dp.svg';\r\nimport cogsIcon from '../../../media/settings_black_24dp.svg';\r\nimport logoIcon from '../../../media/todo-app-logo.svg';\r\nimport analyticsIcon from '../../../media/trending_up_black_24dp.svg';\r\n\r\nfunction Nav(props) {\r\n  const {\r\n    changeTab,\r\n  } = props;\r\n\r\n\r\n  const navbar = useRef(null)\r\n\r\n  const handleClick = (e) => {\r\n    e.currentTarget.classList.toggle('show-more-btn-rotate')\r\n    navbar.current.classList.toggle('navbar-show')\r\n  }\r\n\r\n  \r\n  \r\n  return(\r\n    <>\r\n        <nav className=\"navbar\" ref={navbar}> \r\n          <ul className=\"nav-list\">\r\n            <li className=\"nav-list-item\">\r\n              <a href=\"#home\">\r\n              <img src={logoIcon} alt=\"dashboard-icon\"/>\r\n              <span className=\"logo-text\">\r\n               todo\r\n              </span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-list-item\"\r\n                onClick={changeTab}>\r\n              <a href=\"#Dashboard\">\r\n              <img src={dashboardIcon} alt=\"dashboard-icon\"/>\r\n                <span className=\"list-name\">Dashboard</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-list-item\"\r\n                onClick={changeTab}>\r\n            <a href=\"#Statics\">\r\n              <img src={analyticsIcon} alt=\"statics-icon\"/>\r\n                <span className=\"list-name\">Statics</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-list-item\"\r\n                onClick={changeTab}>\r\n            <a href=\"#Notification\">\r\n              <img src={notificationIcon} alt=\"Notification-icon\"/>\r\n                <span className=\"list-name\">Notification</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-list-item\"\r\n                onClick={changeTab}>\r\n            <a href=\"#Setting\">\r\n              <img src={cogsIcon} alt=\"setting-icon\"/>\r\n                <span className=\"list-name\">Setting</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-list-item\"\r\n                onClick={changeTab}>\r\n            <a href=\"#Account\">\r\n              <img src={userIcon} alt=\"user Account-icon\"/>\r\n                <span className=\"list-name\">account</span>\r\n              </a>\r\n            </li>\r\n          </ul> \r\n\r\n      </nav>\r\n          <div className=\"show-more-btn\"\r\n              onClick={(e) => handleClick(e)}>\r\n            <img src={show_more_btn} alt=\"show more\"/>\r\n          </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst NoteBar = () => {\r\n  return (\r\n    <div className=\"Bar\">\r\n      <div className=\"content-text content\">\r\n        <span >Lorem Lorem Lorem Lorem Lorem Lorem</span><br></br>\r\n        <span >Lorem Lorem Lorem Lorem Lorem Lorem</span>\r\n      </div>\r\n      <div className=\"content\">\r\n        <button className=\"danger-btn\">remove</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteBar;","import React from 'react';\r\nimport NoteBar from './NoteBar';\r\n\r\nfunction Notification() {\r\n  return(\r\n    <section id=\"Notification\" className=\"Notification\">\r\n      <nav>\r\n        <span>Notification</span>\r\n      </nav>\r\n      <NoteBar />\r\n      <NoteBar />\r\n      <NoteBar />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst MODAL_STYLE = {\r\n  position: 'fixed',\r\n  bottom: '10%',\r\n  right: '0',\r\n  backgroundColor: 'red',\r\n  padding: '10px',\r\n  margin: '10px',\r\n  zIndex: 1000\r\n}\r\n\r\n\r\nconst PopUp = (props) => {\r\n  const {\r\n    isPoped,\r\n    data,\r\n    onClose\r\n  } = props;\r\n\r\n  if(!isPoped) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n    <div style={MODAL_STYLE}>\r\n      <div className=\"completed-tasks-container\" >\r\n    <h3 className=\"completed-task-title\">\r\n      Alert Title</h3>\r\n     \r\n      <span className=\"emptyText\"> \r\n      Body <span>Description, id, label, task title</span></span>\r\n      <button onClick={onClose} style={{position: 'absolute', top: '0', right: '0'}}>X</button>\r\n     </div>\r\n    </div>\r\n      \r\n    </>, document.getElementById('portal_msg')\r\n  )\r\n}\r\n\r\nexport default PopUp;\r\n","import React, { useRef, useState} from 'react';\r\n\r\nfunction Setting() {\r\n  const [switchState, setSwitchState] = useState(localStorage.getItem(\"darkMode\"))\r\n\r\n  const switcher = useRef(null);\r\n  \r\n  function handleClick(e) {\r\n    switcher.current.classList.toggle(\"switch-slide\")\r\n    if(switcher.current.classList.contains(\"switch-slide\")) {\r\n      setSwitchState(true)\r\n      localStorage.setItem(\"darkMode\", true)\r\n    } else { \r\n      setSwitchState(false)\r\n      localStorage.setItem(\"darkMode\", false)\r\n    } \r\n  }\r\n \r\n  return (\r\n    <section id=\"Setting\" className=\"Setting\">\r\n      <nav>\r\n      <span>Setting</span>\r\n    </nav>\r\n    <div className=\"setting-content\">\r\n    <div className=\"theme\">\r\n      <h1>Theme</h1>\r\n      <p>Dark mode</p>\r\n      <button className=\"switch-btn\" onClick={handleClick}>\r\n        <span className=\"switch\" ref={switcher} ></span>\r\n      </button>\r\n      {\r\n        switchState ? <span>on</span> : <span>off</span>\r\n      }\r\n    </div>\r\n    </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Setting;\r\n","import React from 'react';\r\n\r\nconst ChartGraph = () => {\r\n  return (\r\n    <div className=\"chart-container\">\r\n        <h1>I am the chart</h1>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ChartGraph;\r\n","import React from 'react';\r\nimport ChartGraph from './ChartGraph';\r\n\r\n\r\nfunction Statics() {\r\n  return (\r\n    <section id=\"Statics\" className=\"Statics\">\r\n      <nav>\r\n      <span>Statics</span>\r\n    </nav>\r\n    <div className=\"select-date\">\r\n      <select  id=\"date-select\">\r\n        <option value=\"30 days\">30 days</option>\r\n        <option value=\"7 days\">7 days</option>\r\n      </select>\r\n    </div>\r\n      \r\n      <ChartGraph />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Statics;","import React, { useState } from 'react';\nimport '../App.css';\nimport Account from './Components//Account/Account';\nimport Dashboard from './Components/Dasboard/Dashboard';\nimport Nav from './Components/Nav/Nav';\nimport Notification from './Components/Notification/Notification';\nimport PopUp from './Components/Notification/PopUp';\nimport Setting from './Components/Setting/Setting';\nimport Statics from './Components/statics/Statics';\nimport AddTaskContextProvider from './Contexts/addTaskContext';\n\n\nfunction App() {\n\n  const [navStatus, setNavStatus] = useState('Dashboard');\n  const [isPoped, setIsPoped] = useState(false)\n  \n  let currentTab; \n  \n   switch (navStatus) {\n     case 'Dashboard':\n       console.log(navStatus);\n       currentTab = <Dashboard /> ;\n       break;\n     case 'Statics':\n      console.log(navStatus);\n       currentTab = <Statics /> ;\n       break;\n     case 'Notification':\n      console.log(navStatus);\n       currentTab = <Notification /> ;\n       break;\n     case 'Account':\n      console.log(navStatus);\n       currentTab = <Account /> ;\n       break;\n     case 'Setting':\n      console.log(navStatus);\n       currentTab = <Setting /> ;\n       break;\n\n     default:\n      currentTab = <Dashboard /> ;\n       break;\n   }\n \n function changeTab(e) {\n  let element = e.currentTarget.children;\n  let navName = element[0].getAttribute('href');\n  navName = navName.slice(1);\n  setNavStatus(navName);\n}\n  return (\n    <AddTaskContextProvider>\n      {currentTab}\n   <Nav changeTab={changeTab} />\n   <PopUp data={'...'}\n          isPoped={isPoped}\n          onClose={() => setIsPoped(false)}/>\n    </AddTaskContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}